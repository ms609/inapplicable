% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tree_rearrange.R
\name{RearrangeTree}
\alias{RearrangeTree}
\title{Rearrange phylogenetic tree}
\usage{
RearrangeTree(tree, morphyObj, Rearrange, min.score = NULL,
  concavity = NULL, return.single = TRUE, iter = "?", cluster = NULL,
  criterion = NULL, verbosity = 0)
}
\arguments{
\item{tree}{a rooted bifurcating phylogenetic tree with the desired outgroup, with its labels
in an order that matches the Morphy object, and the attributes
\code{pscore}, the tree's parsimony score, and 
\code{hits}, the number of times the best score has been hit in the calling function;}

\item{morphyObj}{A morphy object created with \code{\link{LoadMorphy}}}

\item{Rearrange}{a rearrangement function: probably one of 
\code{\link{RootedNNI}}, \code{\link{RootedSPR}} or \code{\link{RootedTBR}};}

\item{min.score}{trees longer than \code{min.score}, probably the score of the starting tree,
will be discarded;}

\item{concavity}{concavity constant for implied weighting (not currently implemented!)}

\item{return.single}{returns all trees if \kbd{FALSE} or a randomly selected tree if \kbd{TRUE};}
\item{iter}{iteration number of calling function, for reporting to user only;}

\item{cluster}{a cluster, prepared with \code{\link{PrepareCluster}}, to accelerate 
searches on multicore machines;}

\item{verbosity}{determines how much information to output to screen.}
}
\value{
{This function returns the most parsimonious of the trees generated, with attributes \code{hits} and \code{pscore}
 as described for argument \code{tree}, and with tip labels ordered to match morphyObj.}
}
\description{
Rearrange phylogenetic tree
}
\details{
\code{RearrangeTree} performs one tree rearrangement of a specified type
}
\examples{
data('SigSut')
random.tree <- RandomTree(SigSut.phy)
RearrangeTree(random.tree, SigSut.phy, RootedNNI)

}
\seealso{
\itemize{
    \item \code{\link{RootedNNI}}
    \item \code{\link{RootedSPR}}
    \item \code{\link{RootedTBR}}
  }
}
\author{
Martin R. Smith
}
